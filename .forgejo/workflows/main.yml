name: Build, test and push

on:
  push

jobs:
  build_server_docker_image:
    runs-on: docker
    container:
      image: node:20
      options: >-
        --volume certs:/certs
    env:
      DOCKER_HOST: tcp://docker:2376
      DOCKER_TLS_VERIFY: "1"
      DOCKER_CERT_PATH: /certs/client
      IMAGE_TAG: git.thetxt.io/thetxt/oxide/server:${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install docker client
        run: |
          apt-get update
          apt-get install -y docker.io ca-certificates
          docker --version
      - name: Verify docker connectivity & certs
        run: |
          echo "Which docker:"
          which docker || true
          docker --version || true
          echo "envs:"
          echo "DOCKER_HOST=$DOCKER_HOST"
          echo "DOCKER_TLS_VERIFY=$DOCKER_TLS_VERIFY"
          echo "DOCKER_CERT_PATH=$DOCKER_CERT_PATH"
          echo "certs listing:"
          ls -la /certs || true
          echo "Try docker info:"
          docker info || true
      - name: Build server image
        run: |
          docker build -t $IMAGE_TAG .
          docker save -o server_image.tar $IMAGE_TAG
      - name: Save docker image
        uses: actions/upload-artifact@v4
        with:
          name: server_image
          path: server_image.tar

  server_test:
    runs-on: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Test server
        working-directory: server
        run: |
          rustup toolchain install nightly --profile minimal --no-self-update
          rustup default nightly
          cargo test
  lib_test:
    runs-on: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Test lib
        working-directory: lib
        run: |
          rustup toolchain install nightly --profile minimal --no-self-update
          rustup default nightly
          cargo test

  server_clippy:
    runs-on: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run clippy on server
        working-directory: server
        run: |
          rustup toolchain install nightly --profile minimal --no-self-update
          rustup default nightly
          rustup component add --toolchain nightly clippy
          cargo clippy
  lib_clippy:
    runs-on: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run clippy on lib
        working-directory: lib
        run: |
          rustup toolchain install nightly --profile minimal --no-self-update
          rustup default nightly
          rustup component add --toolchain nightly clippy
          cargo clippy





  push_server:
    runs-on: docker
    permissions:
      packages: write
    needs:
      - build_server_docker_image
      - server_test
      - lib_test
      - server_clippy
      - lib_clippy
    steps:
      - name: Login to forgejo registry
        uses: docker/login-action@v3
        with:
          registry: git.thetxt.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download backend image
        uses: actions/download-artifact@v4
        with:
          name: server_image
      - name: Push server image
        env:
          IMAGE_TAG: git.thetxt.io/thetxt/oxide/server:${{ github.ref_name }}
        run: |
          docker load -i server_image.tar
          docker push $IMAGE_TAG
